// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace maxtrack.pb.commands {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Commands {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_maxtrack_pb_commands_u_parameter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_parameter, global::maxtrack.pb.commands.u_parameter.Builder> internal__static_maxtrack_pb_commands_u_parameter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_maxtrack_pb_commands_u_command__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command, global::maxtrack.pb.commands.u_command.Builder> internal__static_maxtrack_pb_commands_u_command__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_maxtrack_pb_commands_u_command_response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command_response, global::maxtrack.pb.commands.u_command_response.Builder> internal__static_maxtrack_pb_commands_u_command_response__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command_pwd_gen_response, global::maxtrack.pb.commands.u_command_pwd_gen_response.Builder> internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Commands() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b0ZpbGVzL2NvbW1hbmRzLnByb3RvEhRtYXh0cmFjay5wYi5jb21t", 
            "YW5kcyIoCgt1X3BhcmFtZXRlchIKCgJpZBgBIAIoCRINCgV2YWx1ZRgCIAIo", 
            "CSKmAwoJdV9jb21tYW5kEhAKCHByb3RvY29sGAEgAigNEg4KBnNlcmlhbBgC", 
            "IAIoDRIKCgJpZBgDIAIoCRIMCgR0eXBlGAQgAigNEg8KB2F0dGVtcHQYBSAC", 
            "KA0SDwoHdGltZW91dBgGIAIoCRIUCgxoYW5kbGVyX3R5cGUYByACKA0SNAoJ", 
            "cGFyYW1ldGVyGAggAygLMiEubWF4dHJhY2sucGIuY29tbWFuZHMudV9wYXJh", 
            "bWV0ZXISEQoJdHJhbnNwb3J0GAkgASgJEh0KFXNhdGVsbGl0ZV90ZXJtaW5h", 
            "bF9pZBgKIAEoCRISCgpwZXJpcGhlcmFsGAsgASgNEg8KB2RlbGF5ZWQYDCAB", 
            "KAgSDwoHbGlicmFyeRgNIAEoDRISCgptZXNzYWdlX2lkGA4gASgNEhwKFHNh", 
            "dGVsbGl0ZV9hY2NvdW50X2lkGA8gASgJEiAKGHNhdGVsbGl0ZV9zdWJfYWNj", 
            "b3VudF9pZBgQIAEoCRIXCg9uZXh0X2NvbW1hbmRfaWQYESABKAkSGgoSc2F0", 
            "ZWxsaXRlX3Byb3ZpZGVyGBIgASgJIv0BChJ1X2NvbW1hbmRfcmVzcG9uc2US", 
            "EAoIcHJvdG9jb2wYASACKA0SDgoGc2VyaWFsGAIgAigNEgoKAmlkGAMgAigJ", 
            "EhQKDGhhbmRsZXJfdHlwZRgEIAIoDRIXCg9mcmFnbWVudF9udW1iZXIYBSAC", 
            "KA0SFgoOZnJhZ21lbnRfY291bnQYBiACKA0SDgoGc3RhdHVzGAcgAigNEgwK", 
            "BGRhdGUYCCACKAkSDwoHYXR0ZW1wdBgJIAIoDRISCgptZXNzYWdlX2lkGAog", 
            "ASgNEhoKEnRyYW5zcG9ydF9hbnN3ZXJlZBgLIAEoCBITCgtkZXNjcmlwdGlv", 
            "bhgMIAIoCSKTAgoadV9jb21tYW5kX3B3ZF9nZW5fcmVzcG9uc2USEAoIcHJv", 
            "dG9jb2wYASACKA0SDgoGc2VyaWFsGAIgAigNEgoKAmlkGAMgAigJEhQKDGhh", 
            "bmRsZXJfdHlwZRgEIAIoDRIOCgZzdGF0dXMYBSACKA0SDAoEZGF0ZRgGIAIo", 
            "CRIQCghwYXNzd29yZBgHIAEoCRIQCghsYXRpdHVkZRgIIAEoARIRCglsb25n", 
            "aXR1ZGUYCSABKAESCwoDZGF5GAogASgNEgwKBGhvdXIYCyABKA0SDgoGbWlu", 
            "dXRlGAwgASgNEg0KBWFsYXJtGA0gASgNEg8KB2lvX3R5cGUYDiABKA0SEQoJ", 
          "aW9fbnVtYmVyGA8gASgN"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_maxtrack_pb_commands_u_parameter__Descriptor = Descriptor.MessageTypes[0];
        internal__static_maxtrack_pb_commands_u_parameter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_parameter, global::maxtrack.pb.commands.u_parameter.Builder>(internal__static_maxtrack_pb_commands_u_parameter__Descriptor,
                new string[] { "Id", "Value", });
        internal__static_maxtrack_pb_commands_u_command__Descriptor = Descriptor.MessageTypes[1];
        internal__static_maxtrack_pb_commands_u_command__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command, global::maxtrack.pb.commands.u_command.Builder>(internal__static_maxtrack_pb_commands_u_command__Descriptor,
                new string[] { "Protocol", "Serial", "Id", "Type", "Attempt", "Timeout", "HandlerType", "Parameter", "Transport", "SatelliteTerminalId", "Peripheral", "Delayed", "Library", "MessageId", "SatelliteAccountId", "SatelliteSubAccountId", "NextCommandId", "SatelliteProvider", });
        internal__static_maxtrack_pb_commands_u_command_response__Descriptor = Descriptor.MessageTypes[2];
        internal__static_maxtrack_pb_commands_u_command_response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command_response, global::maxtrack.pb.commands.u_command_response.Builder>(internal__static_maxtrack_pb_commands_u_command_response__Descriptor,
                new string[] { "Protocol", "Serial", "Id", "HandlerType", "FragmentNumber", "FragmentCount", "Status", "Date", "Attempt", "MessageId", "TransportAnswered", "Description", });
        internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__Descriptor = Descriptor.MessageTypes[3];
        internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::maxtrack.pb.commands.u_command_pwd_gen_response, global::maxtrack.pb.commands.u_command_pwd_gen_response.Builder>(internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__Descriptor,
                new string[] { "Protocol", "Serial", "Id", "HandlerType", "Status", "Date", "Password", "Latitude", "Longitude", "Day", "Hour", "Minute", "Alarm", "IoType", "IoNumber", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class u_parameter : pb::GeneratedMessage<u_parameter, u_parameter.Builder> {
    private u_parameter() { }
    private static readonly u_parameter defaultInstance = new u_parameter().MakeReadOnly();
    private static readonly string[] _uParameterFieldNames = new string[] { "id", "value" };
    private static readonly uint[] _uParameterFieldTags = new uint[] { 10, 18 };
    public static u_parameter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override u_parameter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override u_parameter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_parameter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<u_parameter, u_parameter.Builder> InternalFieldAccessors {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_parameter__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uParameterFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static u_parameter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_parameter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_parameter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_parameter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_parameter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_parameter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static u_parameter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static u_parameter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static u_parameter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_parameter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private u_parameter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(u_parameter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<u_parameter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(u_parameter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private u_parameter result;
      
      private u_parameter PrepareBuilder() {
        if (resultIsReadOnly) {
          u_parameter original = result;
          result = new u_parameter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override u_parameter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::maxtrack.pb.commands.u_parameter.Descriptor; }
      }
      
      public override u_parameter DefaultInstanceForType {
        get { return global::maxtrack.pb.commands.u_parameter.DefaultInstance; }
      }
      
      public override u_parameter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is u_parameter) {
          return MergeFrom((u_parameter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(u_parameter other) {
        if (other == global::maxtrack.pb.commands.u_parameter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uParameterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uParameterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static u_parameter() {
      object.ReferenceEquals(global::maxtrack.pb.commands.Commands.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class u_command : pb::GeneratedMessage<u_command, u_command.Builder> {
    private u_command() { }
    private static readonly u_command defaultInstance = new u_command().MakeReadOnly();
    private static readonly string[] _uCommandFieldNames = new string[] { "attempt", "delayed", "handler_type", "id", "library", "message_id", "next_command_id", "parameter", "peripheral", "protocol", "satellite_account_id", "satellite_provider", "satellite_sub_account_id", "satellite_terminal_id", "serial", "timeout", "transport", "type" };
    private static readonly uint[] _uCommandFieldTags = new uint[] { 40, 96, 56, 26, 104, 112, 138, 66, 88, 8, 122, 146, 130, 82, 16, 50, 74, 32 };
    public static u_command DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override u_command DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override u_command ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<u_command, u_command.Builder> InternalFieldAccessors {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command__FieldAccessorTable; }
    }
    
    public const int ProtocolFieldNumber = 1;
    private bool hasProtocol;
    private uint protocol_;
    public bool HasProtocol {
      get { return hasProtocol; }
    }
    [global::System.CLSCompliant(false)]
    public uint Protocol {
      get { return protocol_; }
    }
    
    public const int SerialFieldNumber = 2;
    private bool hasSerial;
    private uint serial_;
    public bool HasSerial {
      get { return hasSerial; }
    }
    [global::System.CLSCompliant(false)]
    public uint Serial {
      get { return serial_; }
    }
    
    public const int IdFieldNumber = 3;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 4;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int AttemptFieldNumber = 5;
    private bool hasAttempt;
    private uint attempt_;
    public bool HasAttempt {
      get { return hasAttempt; }
    }
    [global::System.CLSCompliant(false)]
    public uint Attempt {
      get { return attempt_; }
    }
    
    public const int TimeoutFieldNumber = 6;
    private bool hasTimeout;
    private string timeout_ = "";
    public bool HasTimeout {
      get { return hasTimeout; }
    }
    public string Timeout {
      get { return timeout_; }
    }
    
    public const int HandlerTypeFieldNumber = 7;
    private bool hasHandlerType;
    private uint handlerType_;
    public bool HasHandlerType {
      get { return hasHandlerType; }
    }
    [global::System.CLSCompliant(false)]
    public uint HandlerType {
      get { return handlerType_; }
    }
    
    public const int ParameterFieldNumber = 8;
    private pbc::PopsicleList<global::maxtrack.pb.commands.u_parameter> parameter_ = new pbc::PopsicleList<global::maxtrack.pb.commands.u_parameter>();
    public scg::IList<global::maxtrack.pb.commands.u_parameter> ParameterList {
      get { return parameter_; }
    }
    public int ParameterCount {
      get { return parameter_.Count; }
    }
    public global::maxtrack.pb.commands.u_parameter GetParameter(int index) {
      return parameter_[index];
    }
    
    public const int TransportFieldNumber = 9;
    private bool hasTransport;
    private string transport_ = "";
    public bool HasTransport {
      get { return hasTransport; }
    }
    public string Transport {
      get { return transport_; }
    }
    
    public const int SatelliteTerminalIdFieldNumber = 10;
    private bool hasSatelliteTerminalId;
    private string satelliteTerminalId_ = "";
    public bool HasSatelliteTerminalId {
      get { return hasSatelliteTerminalId; }
    }
    public string SatelliteTerminalId {
      get { return satelliteTerminalId_; }
    }
    
    public const int PeripheralFieldNumber = 11;
    private bool hasPeripheral;
    private uint peripheral_;
    public bool HasPeripheral {
      get { return hasPeripheral; }
    }
    [global::System.CLSCompliant(false)]
    public uint Peripheral {
      get { return peripheral_; }
    }
    
    public const int DelayedFieldNumber = 12;
    private bool hasDelayed;
    private bool delayed_;
    public bool HasDelayed {
      get { return hasDelayed; }
    }
    public bool Delayed {
      get { return delayed_; }
    }
    
    public const int LibraryFieldNumber = 13;
    private bool hasLibrary;
    private uint library_;
    public bool HasLibrary {
      get { return hasLibrary; }
    }
    [global::System.CLSCompliant(false)]
    public uint Library {
      get { return library_; }
    }
    
    public const int MessageIdFieldNumber = 14;
    private bool hasMessageId;
    private uint messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    [global::System.CLSCompliant(false)]
    public uint MessageId {
      get { return messageId_; }
    }
    
    public const int SatelliteAccountIdFieldNumber = 15;
    private bool hasSatelliteAccountId;
    private string satelliteAccountId_ = "";
    public bool HasSatelliteAccountId {
      get { return hasSatelliteAccountId; }
    }
    public string SatelliteAccountId {
      get { return satelliteAccountId_; }
    }
    
    public const int SatelliteSubAccountIdFieldNumber = 16;
    private bool hasSatelliteSubAccountId;
    private string satelliteSubAccountId_ = "";
    public bool HasSatelliteSubAccountId {
      get { return hasSatelliteSubAccountId; }
    }
    public string SatelliteSubAccountId {
      get { return satelliteSubAccountId_; }
    }
    
    public const int NextCommandIdFieldNumber = 17;
    private bool hasNextCommandId;
    private string nextCommandId_ = "";
    public bool HasNextCommandId {
      get { return hasNextCommandId; }
    }
    public string NextCommandId {
      get { return nextCommandId_; }
    }
    
    public const int SatelliteProviderFieldNumber = 18;
    private bool hasSatelliteProvider;
    private string satelliteProvider_ = "";
    public bool HasSatelliteProvider {
      get { return hasSatelliteProvider; }
    }
    public string SatelliteProvider {
      get { return satelliteProvider_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocol) return false;
        if (!hasSerial) return false;
        if (!hasId) return false;
        if (!hasType) return false;
        if (!hasAttempt) return false;
        if (!hasTimeout) return false;
        if (!hasHandlerType) return false;
        foreach (global::maxtrack.pb.commands.u_parameter element in ParameterList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uCommandFieldNames;
      if (hasProtocol) {
        output.WriteUInt32(1, field_names[9], Protocol);
      }
      if (hasSerial) {
        output.WriteUInt32(2, field_names[14], Serial);
      }
      if (hasId) {
        output.WriteString(3, field_names[3], Id);
      }
      if (hasType) {
        output.WriteUInt32(4, field_names[17], Type);
      }
      if (hasAttempt) {
        output.WriteUInt32(5, field_names[0], Attempt);
      }
      if (hasTimeout) {
        output.WriteString(6, field_names[15], Timeout);
      }
      if (hasHandlerType) {
        output.WriteUInt32(7, field_names[2], HandlerType);
      }
      if (parameter_.Count > 0) {
        output.WriteMessageArray(8, field_names[7], parameter_);
      }
      if (hasTransport) {
        output.WriteString(9, field_names[16], Transport);
      }
      if (hasSatelliteTerminalId) {
        output.WriteString(10, field_names[13], SatelliteTerminalId);
      }
      if (hasPeripheral) {
        output.WriteUInt32(11, field_names[8], Peripheral);
      }
      if (hasDelayed) {
        output.WriteBool(12, field_names[1], Delayed);
      }
      if (hasLibrary) {
        output.WriteUInt32(13, field_names[4], Library);
      }
      if (hasMessageId) {
        output.WriteUInt32(14, field_names[5], MessageId);
      }
      if (hasSatelliteAccountId) {
        output.WriteString(15, field_names[10], SatelliteAccountId);
      }
      if (hasSatelliteSubAccountId) {
        output.WriteString(16, field_names[12], SatelliteSubAccountId);
      }
      if (hasNextCommandId) {
        output.WriteString(17, field_names[6], NextCommandId);
      }
      if (hasSatelliteProvider) {
        output.WriteString(18, field_names[11], SatelliteProvider);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasProtocol) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Protocol);
      }
      if (hasSerial) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Serial);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Id);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Type);
      }
      if (hasAttempt) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Attempt);
      }
      if (hasTimeout) {
        size += pb::CodedOutputStream.ComputeStringSize(6, Timeout);
      }
      if (hasHandlerType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, HandlerType);
      }
      foreach (global::maxtrack.pb.commands.u_parameter element in ParameterList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasTransport) {
        size += pb::CodedOutputStream.ComputeStringSize(9, Transport);
      }
      if (hasSatelliteTerminalId) {
        size += pb::CodedOutputStream.ComputeStringSize(10, SatelliteTerminalId);
      }
      if (hasPeripheral) {
        size += pb::CodedOutputStream.ComputeUInt32Size(11, Peripheral);
      }
      if (hasDelayed) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, Delayed);
      }
      if (hasLibrary) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, Library);
      }
      if (hasMessageId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(14, MessageId);
      }
      if (hasSatelliteAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(15, SatelliteAccountId);
      }
      if (hasSatelliteSubAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(16, SatelliteSubAccountId);
      }
      if (hasNextCommandId) {
        size += pb::CodedOutputStream.ComputeStringSize(17, NextCommandId);
      }
      if (hasSatelliteProvider) {
        size += pb::CodedOutputStream.ComputeStringSize(18, SatelliteProvider);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static u_command ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static u_command ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static u_command ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static u_command ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private u_command MakeReadOnly() {
      parameter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(u_command prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<u_command, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(u_command cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private u_command result;
      
      private u_command PrepareBuilder() {
        if (resultIsReadOnly) {
          u_command original = result;
          result = new u_command();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override u_command MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::maxtrack.pb.commands.u_command.Descriptor; }
      }
      
      public override u_command DefaultInstanceForType {
        get { return global::maxtrack.pb.commands.u_command.DefaultInstance; }
      }
      
      public override u_command BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is u_command) {
          return MergeFrom((u_command) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(u_command other) {
        if (other == global::maxtrack.pb.commands.u_command.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocol) {
          Protocol = other.Protocol;
        }
        if (other.HasSerial) {
          Serial = other.Serial;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasAttempt) {
          Attempt = other.Attempt;
        }
        if (other.HasTimeout) {
          Timeout = other.Timeout;
        }
        if (other.HasHandlerType) {
          HandlerType = other.HandlerType;
        }
        if (other.parameter_.Count != 0) {
          result.parameter_.Add(other.parameter_);
        }
        if (other.HasTransport) {
          Transport = other.Transport;
        }
        if (other.HasSatelliteTerminalId) {
          SatelliteTerminalId = other.SatelliteTerminalId;
        }
        if (other.HasPeripheral) {
          Peripheral = other.Peripheral;
        }
        if (other.HasDelayed) {
          Delayed = other.Delayed;
        }
        if (other.HasLibrary) {
          Library = other.Library;
        }
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasSatelliteAccountId) {
          SatelliteAccountId = other.SatelliteAccountId;
        }
        if (other.HasSatelliteSubAccountId) {
          SatelliteSubAccountId = other.SatelliteSubAccountId;
        }
        if (other.HasNextCommandId) {
          NextCommandId = other.NextCommandId;
        }
        if (other.HasSatelliteProvider) {
          SatelliteProvider = other.SatelliteProvider;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uCommandFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uCommandFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocol = input.ReadUInt32(ref result.protocol_);
              break;
            }
            case 16: {
              result.hasSerial = input.ReadUInt32(ref result.serial_);
              break;
            }
            case 26: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 32: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 40: {
              result.hasAttempt = input.ReadUInt32(ref result.attempt_);
              break;
            }
            case 50: {
              result.hasTimeout = input.ReadString(ref result.timeout_);
              break;
            }
            case 56: {
              result.hasHandlerType = input.ReadUInt32(ref result.handlerType_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.parameter_, global::maxtrack.pb.commands.u_parameter.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              result.hasTransport = input.ReadString(ref result.transport_);
              break;
            }
            case 82: {
              result.hasSatelliteTerminalId = input.ReadString(ref result.satelliteTerminalId_);
              break;
            }
            case 88: {
              result.hasPeripheral = input.ReadUInt32(ref result.peripheral_);
              break;
            }
            case 96: {
              result.hasDelayed = input.ReadBool(ref result.delayed_);
              break;
            }
            case 104: {
              result.hasLibrary = input.ReadUInt32(ref result.library_);
              break;
            }
            case 112: {
              result.hasMessageId = input.ReadUInt32(ref result.messageId_);
              break;
            }
            case 122: {
              result.hasSatelliteAccountId = input.ReadString(ref result.satelliteAccountId_);
              break;
            }
            case 130: {
              result.hasSatelliteSubAccountId = input.ReadString(ref result.satelliteSubAccountId_);
              break;
            }
            case 138: {
              result.hasNextCommandId = input.ReadString(ref result.nextCommandId_);
              break;
            }
            case 146: {
              result.hasSatelliteProvider = input.ReadString(ref result.satelliteProvider_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocol {
        get { return result.hasProtocol; }
      }
      [global::System.CLSCompliant(false)]
      public uint Protocol {
        get { return result.Protocol; }
        set { SetProtocol(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocol(uint value) {
        PrepareBuilder();
        result.hasProtocol = true;
        result.protocol_ = value;
        return this;
      }
      public Builder ClearProtocol() {
        PrepareBuilder();
        result.hasProtocol = false;
        result.protocol_ = 0;
        return this;
      }
      
      public bool HasSerial {
        get { return result.hasSerial; }
      }
      [global::System.CLSCompliant(false)]
      public uint Serial {
        get { return result.Serial; }
        set { SetSerial(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSerial(uint value) {
        PrepareBuilder();
        result.hasSerial = true;
        result.serial_ = value;
        return this;
      }
      public Builder ClearSerial() {
        PrepareBuilder();
        result.hasSerial = false;
        result.serial_ = 0;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasAttempt {
        get { return result.hasAttempt; }
      }
      [global::System.CLSCompliant(false)]
      public uint Attempt {
        get { return result.Attempt; }
        set { SetAttempt(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAttempt(uint value) {
        PrepareBuilder();
        result.hasAttempt = true;
        result.attempt_ = value;
        return this;
      }
      public Builder ClearAttempt() {
        PrepareBuilder();
        result.hasAttempt = false;
        result.attempt_ = 0;
        return this;
      }
      
      public bool HasTimeout {
        get { return result.hasTimeout; }
      }
      public string Timeout {
        get { return result.Timeout; }
        set { SetTimeout(value); }
      }
      public Builder SetTimeout(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeout = true;
        result.timeout_ = value;
        return this;
      }
      public Builder ClearTimeout() {
        PrepareBuilder();
        result.hasTimeout = false;
        result.timeout_ = "";
        return this;
      }
      
      public bool HasHandlerType {
        get { return result.hasHandlerType; }
      }
      [global::System.CLSCompliant(false)]
      public uint HandlerType {
        get { return result.HandlerType; }
        set { SetHandlerType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHandlerType(uint value) {
        PrepareBuilder();
        result.hasHandlerType = true;
        result.handlerType_ = value;
        return this;
      }
      public Builder ClearHandlerType() {
        PrepareBuilder();
        result.hasHandlerType = false;
        result.handlerType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::maxtrack.pb.commands.u_parameter> ParameterList {
        get { return PrepareBuilder().parameter_; }
      }
      public int ParameterCount {
        get { return result.ParameterCount; }
      }
      public global::maxtrack.pb.commands.u_parameter GetParameter(int index) {
        return result.GetParameter(index);
      }
      public Builder SetParameter(int index, global::maxtrack.pb.commands.u_parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameter_[index] = value;
        return this;
      }
      public Builder SetParameter(int index, global::maxtrack.pb.commands.u_parameter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.parameter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddParameter(global::maxtrack.pb.commands.u_parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameter_.Add(value);
        return this;
      }
      public Builder AddParameter(global::maxtrack.pb.commands.u_parameter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.parameter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeParameter(scg::IEnumerable<global::maxtrack.pb.commands.u_parameter> values) {
        PrepareBuilder();
        result.parameter_.Add(values);
        return this;
      }
      public Builder ClearParameter() {
        PrepareBuilder();
        result.parameter_.Clear();
        return this;
      }
      
      public bool HasTransport {
        get { return result.hasTransport; }
      }
      public string Transport {
        get { return result.Transport; }
        set { SetTransport(value); }
      }
      public Builder SetTransport(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransport = true;
        result.transport_ = value;
        return this;
      }
      public Builder ClearTransport() {
        PrepareBuilder();
        result.hasTransport = false;
        result.transport_ = "";
        return this;
      }
      
      public bool HasSatelliteTerminalId {
        get { return result.hasSatelliteTerminalId; }
      }
      public string SatelliteTerminalId {
        get { return result.SatelliteTerminalId; }
        set { SetSatelliteTerminalId(value); }
      }
      public Builder SetSatelliteTerminalId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSatelliteTerminalId = true;
        result.satelliteTerminalId_ = value;
        return this;
      }
      public Builder ClearSatelliteTerminalId() {
        PrepareBuilder();
        result.hasSatelliteTerminalId = false;
        result.satelliteTerminalId_ = "";
        return this;
      }
      
      public bool HasPeripheral {
        get { return result.hasPeripheral; }
      }
      [global::System.CLSCompliant(false)]
      public uint Peripheral {
        get { return result.Peripheral; }
        set { SetPeripheral(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPeripheral(uint value) {
        PrepareBuilder();
        result.hasPeripheral = true;
        result.peripheral_ = value;
        return this;
      }
      public Builder ClearPeripheral() {
        PrepareBuilder();
        result.hasPeripheral = false;
        result.peripheral_ = 0;
        return this;
      }
      
      public bool HasDelayed {
        get { return result.hasDelayed; }
      }
      public bool Delayed {
        get { return result.Delayed; }
        set { SetDelayed(value); }
      }
      public Builder SetDelayed(bool value) {
        PrepareBuilder();
        result.hasDelayed = true;
        result.delayed_ = value;
        return this;
      }
      public Builder ClearDelayed() {
        PrepareBuilder();
        result.hasDelayed = false;
        result.delayed_ = false;
        return this;
      }
      
      public bool HasLibrary {
        get { return result.hasLibrary; }
      }
      [global::System.CLSCompliant(false)]
      public uint Library {
        get { return result.Library; }
        set { SetLibrary(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLibrary(uint value) {
        PrepareBuilder();
        result.hasLibrary = true;
        result.library_ = value;
        return this;
      }
      public Builder ClearLibrary() {
        PrepareBuilder();
        result.hasLibrary = false;
        result.library_ = 0;
        return this;
      }
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      [global::System.CLSCompliant(false)]
      public uint MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMessageId(uint value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasSatelliteAccountId {
        get { return result.hasSatelliteAccountId; }
      }
      public string SatelliteAccountId {
        get { return result.SatelliteAccountId; }
        set { SetSatelliteAccountId(value); }
      }
      public Builder SetSatelliteAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSatelliteAccountId = true;
        result.satelliteAccountId_ = value;
        return this;
      }
      public Builder ClearSatelliteAccountId() {
        PrepareBuilder();
        result.hasSatelliteAccountId = false;
        result.satelliteAccountId_ = "";
        return this;
      }
      
      public bool HasSatelliteSubAccountId {
        get { return result.hasSatelliteSubAccountId; }
      }
      public string SatelliteSubAccountId {
        get { return result.SatelliteSubAccountId; }
        set { SetSatelliteSubAccountId(value); }
      }
      public Builder SetSatelliteSubAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSatelliteSubAccountId = true;
        result.satelliteSubAccountId_ = value;
        return this;
      }
      public Builder ClearSatelliteSubAccountId() {
        PrepareBuilder();
        result.hasSatelliteSubAccountId = false;
        result.satelliteSubAccountId_ = "";
        return this;
      }
      
      public bool HasNextCommandId {
        get { return result.hasNextCommandId; }
      }
      public string NextCommandId {
        get { return result.NextCommandId; }
        set { SetNextCommandId(value); }
      }
      public Builder SetNextCommandId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNextCommandId = true;
        result.nextCommandId_ = value;
        return this;
      }
      public Builder ClearNextCommandId() {
        PrepareBuilder();
        result.hasNextCommandId = false;
        result.nextCommandId_ = "";
        return this;
      }
      
      public bool HasSatelliteProvider {
        get { return result.hasSatelliteProvider; }
      }
      public string SatelliteProvider {
        get { return result.SatelliteProvider; }
        set { SetSatelliteProvider(value); }
      }
      public Builder SetSatelliteProvider(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSatelliteProvider = true;
        result.satelliteProvider_ = value;
        return this;
      }
      public Builder ClearSatelliteProvider() {
        PrepareBuilder();
        result.hasSatelliteProvider = false;
        result.satelliteProvider_ = "";
        return this;
      }
    }
    static u_command() {
      object.ReferenceEquals(global::maxtrack.pb.commands.Commands.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class u_command_response : pb::GeneratedMessage<u_command_response, u_command_response.Builder> {
    private u_command_response() { }
    private static readonly u_command_response defaultInstance = new u_command_response().MakeReadOnly();
    private static readonly string[] _uCommandResponseFieldNames = new string[] { "attempt", "date", "description", "fragment_count", "fragment_number", "handler_type", "id", "message_id", "protocol", "serial", "status", "transport_answered" };
    private static readonly uint[] _uCommandResponseFieldTags = new uint[] { 72, 66, 98, 48, 40, 32, 26, 80, 8, 16, 56, 88 };
    public static u_command_response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override u_command_response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override u_command_response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command_response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<u_command_response, u_command_response.Builder> InternalFieldAccessors {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command_response__FieldAccessorTable; }
    }
    
    public const int ProtocolFieldNumber = 1;
    private bool hasProtocol;
    private uint protocol_;
    public bool HasProtocol {
      get { return hasProtocol; }
    }
    [global::System.CLSCompliant(false)]
    public uint Protocol {
      get { return protocol_; }
    }
    
    public const int SerialFieldNumber = 2;
    private bool hasSerial;
    private uint serial_;
    public bool HasSerial {
      get { return hasSerial; }
    }
    [global::System.CLSCompliant(false)]
    public uint Serial {
      get { return serial_; }
    }
    
    public const int IdFieldNumber = 3;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int HandlerTypeFieldNumber = 4;
    private bool hasHandlerType;
    private uint handlerType_;
    public bool HasHandlerType {
      get { return hasHandlerType; }
    }
    [global::System.CLSCompliant(false)]
    public uint HandlerType {
      get { return handlerType_; }
    }
    
    public const int FragmentNumberFieldNumber = 5;
    private bool hasFragmentNumber;
    private uint fragmentNumber_;
    public bool HasFragmentNumber {
      get { return hasFragmentNumber; }
    }
    [global::System.CLSCompliant(false)]
    public uint FragmentNumber {
      get { return fragmentNumber_; }
    }
    
    public const int FragmentCountFieldNumber = 6;
    private bool hasFragmentCount;
    private uint fragmentCount_;
    public bool HasFragmentCount {
      get { return hasFragmentCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint FragmentCount {
      get { return fragmentCount_; }
    }
    
    public const int StatusFieldNumber = 7;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public const int DateFieldNumber = 8;
    private bool hasDate;
    private string date_ = "";
    public bool HasDate {
      get { return hasDate; }
    }
    public string Date {
      get { return date_; }
    }
    
    public const int AttemptFieldNumber = 9;
    private bool hasAttempt;
    private uint attempt_;
    public bool HasAttempt {
      get { return hasAttempt; }
    }
    [global::System.CLSCompliant(false)]
    public uint Attempt {
      get { return attempt_; }
    }
    
    public const int MessageIdFieldNumber = 10;
    private bool hasMessageId;
    private uint messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    [global::System.CLSCompliant(false)]
    public uint MessageId {
      get { return messageId_; }
    }
    
    public const int TransportAnsweredFieldNumber = 11;
    private bool hasTransportAnswered;
    private bool transportAnswered_;
    public bool HasTransportAnswered {
      get { return hasTransportAnswered; }
    }
    public bool TransportAnswered {
      get { return transportAnswered_; }
    }
    
    public const int DescriptionFieldNumber = 12;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocol) return false;
        if (!hasSerial) return false;
        if (!hasId) return false;
        if (!hasHandlerType) return false;
        if (!hasFragmentNumber) return false;
        if (!hasFragmentCount) return false;
        if (!hasStatus) return false;
        if (!hasDate) return false;
        if (!hasAttempt) return false;
        if (!hasDescription) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uCommandResponseFieldNames;
      if (hasProtocol) {
        output.WriteUInt32(1, field_names[8], Protocol);
      }
      if (hasSerial) {
        output.WriteUInt32(2, field_names[9], Serial);
      }
      if (hasId) {
        output.WriteString(3, field_names[6], Id);
      }
      if (hasHandlerType) {
        output.WriteUInt32(4, field_names[5], HandlerType);
      }
      if (hasFragmentNumber) {
        output.WriteUInt32(5, field_names[4], FragmentNumber);
      }
      if (hasFragmentCount) {
        output.WriteUInt32(6, field_names[3], FragmentCount);
      }
      if (hasStatus) {
        output.WriteUInt32(7, field_names[10], Status);
      }
      if (hasDate) {
        output.WriteString(8, field_names[1], Date);
      }
      if (hasAttempt) {
        output.WriteUInt32(9, field_names[0], Attempt);
      }
      if (hasMessageId) {
        output.WriteUInt32(10, field_names[7], MessageId);
      }
      if (hasTransportAnswered) {
        output.WriteBool(11, field_names[11], TransportAnswered);
      }
      if (hasDescription) {
        output.WriteString(12, field_names[2], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasProtocol) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Protocol);
      }
      if (hasSerial) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Serial);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Id);
      }
      if (hasHandlerType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, HandlerType);
      }
      if (hasFragmentNumber) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, FragmentNumber);
      }
      if (hasFragmentCount) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, FragmentCount);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, Status);
      }
      if (hasDate) {
        size += pb::CodedOutputStream.ComputeStringSize(8, Date);
      }
      if (hasAttempt) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, Attempt);
      }
      if (hasMessageId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, MessageId);
      }
      if (hasTransportAnswered) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, TransportAnswered);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(12, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static u_command_response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command_response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command_response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command_response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command_response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command_response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static u_command_response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static u_command_response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static u_command_response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command_response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private u_command_response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(u_command_response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<u_command_response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(u_command_response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private u_command_response result;
      
      private u_command_response PrepareBuilder() {
        if (resultIsReadOnly) {
          u_command_response original = result;
          result = new u_command_response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override u_command_response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::maxtrack.pb.commands.u_command_response.Descriptor; }
      }
      
      public override u_command_response DefaultInstanceForType {
        get { return global::maxtrack.pb.commands.u_command_response.DefaultInstance; }
      }
      
      public override u_command_response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is u_command_response) {
          return MergeFrom((u_command_response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(u_command_response other) {
        if (other == global::maxtrack.pb.commands.u_command_response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocol) {
          Protocol = other.Protocol;
        }
        if (other.HasSerial) {
          Serial = other.Serial;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasHandlerType) {
          HandlerType = other.HandlerType;
        }
        if (other.HasFragmentNumber) {
          FragmentNumber = other.FragmentNumber;
        }
        if (other.HasFragmentCount) {
          FragmentCount = other.FragmentCount;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasDate) {
          Date = other.Date;
        }
        if (other.HasAttempt) {
          Attempt = other.Attempt;
        }
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasTransportAnswered) {
          TransportAnswered = other.TransportAnswered;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uCommandResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uCommandResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocol = input.ReadUInt32(ref result.protocol_);
              break;
            }
            case 16: {
              result.hasSerial = input.ReadUInt32(ref result.serial_);
              break;
            }
            case 26: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 32: {
              result.hasHandlerType = input.ReadUInt32(ref result.handlerType_);
              break;
            }
            case 40: {
              result.hasFragmentNumber = input.ReadUInt32(ref result.fragmentNumber_);
              break;
            }
            case 48: {
              result.hasFragmentCount = input.ReadUInt32(ref result.fragmentCount_);
              break;
            }
            case 56: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 66: {
              result.hasDate = input.ReadString(ref result.date_);
              break;
            }
            case 72: {
              result.hasAttempt = input.ReadUInt32(ref result.attempt_);
              break;
            }
            case 80: {
              result.hasMessageId = input.ReadUInt32(ref result.messageId_);
              break;
            }
            case 88: {
              result.hasTransportAnswered = input.ReadBool(ref result.transportAnswered_);
              break;
            }
            case 98: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocol {
        get { return result.hasProtocol; }
      }
      [global::System.CLSCompliant(false)]
      public uint Protocol {
        get { return result.Protocol; }
        set { SetProtocol(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocol(uint value) {
        PrepareBuilder();
        result.hasProtocol = true;
        result.protocol_ = value;
        return this;
      }
      public Builder ClearProtocol() {
        PrepareBuilder();
        result.hasProtocol = false;
        result.protocol_ = 0;
        return this;
      }
      
      public bool HasSerial {
        get { return result.hasSerial; }
      }
      [global::System.CLSCompliant(false)]
      public uint Serial {
        get { return result.Serial; }
        set { SetSerial(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSerial(uint value) {
        PrepareBuilder();
        result.hasSerial = true;
        result.serial_ = value;
        return this;
      }
      public Builder ClearSerial() {
        PrepareBuilder();
        result.hasSerial = false;
        result.serial_ = 0;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasHandlerType {
        get { return result.hasHandlerType; }
      }
      [global::System.CLSCompliant(false)]
      public uint HandlerType {
        get { return result.HandlerType; }
        set { SetHandlerType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHandlerType(uint value) {
        PrepareBuilder();
        result.hasHandlerType = true;
        result.handlerType_ = value;
        return this;
      }
      public Builder ClearHandlerType() {
        PrepareBuilder();
        result.hasHandlerType = false;
        result.handlerType_ = 0;
        return this;
      }
      
      public bool HasFragmentNumber {
        get { return result.hasFragmentNumber; }
      }
      [global::System.CLSCompliant(false)]
      public uint FragmentNumber {
        get { return result.FragmentNumber; }
        set { SetFragmentNumber(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFragmentNumber(uint value) {
        PrepareBuilder();
        result.hasFragmentNumber = true;
        result.fragmentNumber_ = value;
        return this;
      }
      public Builder ClearFragmentNumber() {
        PrepareBuilder();
        result.hasFragmentNumber = false;
        result.fragmentNumber_ = 0;
        return this;
      }
      
      public bool HasFragmentCount {
        get { return result.hasFragmentCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint FragmentCount {
        get { return result.FragmentCount; }
        set { SetFragmentCount(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFragmentCount(uint value) {
        PrepareBuilder();
        result.hasFragmentCount = true;
        result.fragmentCount_ = value;
        return this;
      }
      public Builder ClearFragmentCount() {
        PrepareBuilder();
        result.hasFragmentCount = false;
        result.fragmentCount_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasDate {
        get { return result.hasDate; }
      }
      public string Date {
        get { return result.Date; }
        set { SetDate(value); }
      }
      public Builder SetDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDate = true;
        result.date_ = value;
        return this;
      }
      public Builder ClearDate() {
        PrepareBuilder();
        result.hasDate = false;
        result.date_ = "";
        return this;
      }
      
      public bool HasAttempt {
        get { return result.hasAttempt; }
      }
      [global::System.CLSCompliant(false)]
      public uint Attempt {
        get { return result.Attempt; }
        set { SetAttempt(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAttempt(uint value) {
        PrepareBuilder();
        result.hasAttempt = true;
        result.attempt_ = value;
        return this;
      }
      public Builder ClearAttempt() {
        PrepareBuilder();
        result.hasAttempt = false;
        result.attempt_ = 0;
        return this;
      }
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      [global::System.CLSCompliant(false)]
      public uint MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMessageId(uint value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasTransportAnswered {
        get { return result.hasTransportAnswered; }
      }
      public bool TransportAnswered {
        get { return result.TransportAnswered; }
        set { SetTransportAnswered(value); }
      }
      public Builder SetTransportAnswered(bool value) {
        PrepareBuilder();
        result.hasTransportAnswered = true;
        result.transportAnswered_ = value;
        return this;
      }
      public Builder ClearTransportAnswered() {
        PrepareBuilder();
        result.hasTransportAnswered = false;
        result.transportAnswered_ = false;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
    }
    static u_command_response() {
      object.ReferenceEquals(global::maxtrack.pb.commands.Commands.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class u_command_pwd_gen_response : pb::GeneratedMessage<u_command_pwd_gen_response, u_command_pwd_gen_response.Builder> {
    private u_command_pwd_gen_response() { }
    private static readonly u_command_pwd_gen_response defaultInstance = new u_command_pwd_gen_response().MakeReadOnly();
    private static readonly string[] _uCommandPwdGenResponseFieldNames = new string[] { "alarm", "date", "day", "handler_type", "hour", "id", "io_number", "io_type", "latitude", "longitude", "minute", "password", "protocol", "serial", "status" };
    private static readonly uint[] _uCommandPwdGenResponseFieldTags = new uint[] { 104, 50, 80, 32, 88, 26, 120, 112, 65, 73, 96, 58, 8, 16, 40 };
    public static u_command_pwd_gen_response DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override u_command_pwd_gen_response DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override u_command_pwd_gen_response ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<u_command_pwd_gen_response, u_command_pwd_gen_response.Builder> InternalFieldAccessors {
      get { return global::maxtrack.pb.commands.Commands.internal__static_maxtrack_pb_commands_u_command_pwd_gen_response__FieldAccessorTable; }
    }
    
    public const int ProtocolFieldNumber = 1;
    private bool hasProtocol;
    private uint protocol_;
    public bool HasProtocol {
      get { return hasProtocol; }
    }
    [global::System.CLSCompliant(false)]
    public uint Protocol {
      get { return protocol_; }
    }
    
    public const int SerialFieldNumber = 2;
    private bool hasSerial;
    private uint serial_;
    public bool HasSerial {
      get { return hasSerial; }
    }
    [global::System.CLSCompliant(false)]
    public uint Serial {
      get { return serial_; }
    }
    
    public const int IdFieldNumber = 3;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int HandlerTypeFieldNumber = 4;
    private bool hasHandlerType;
    private uint handlerType_;
    public bool HasHandlerType {
      get { return hasHandlerType; }
    }
    [global::System.CLSCompliant(false)]
    public uint HandlerType {
      get { return handlerType_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public const int DateFieldNumber = 6;
    private bool hasDate;
    private string date_ = "";
    public bool HasDate {
      get { return hasDate; }
    }
    public string Date {
      get { return date_; }
    }
    
    public const int PasswordFieldNumber = 7;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int LatitudeFieldNumber = 8;
    private bool hasLatitude;
    private double latitude_;
    public bool HasLatitude {
      get { return hasLatitude; }
    }
    public double Latitude {
      get { return latitude_; }
    }
    
    public const int LongitudeFieldNumber = 9;
    private bool hasLongitude;
    private double longitude_;
    public bool HasLongitude {
      get { return hasLongitude; }
    }
    public double Longitude {
      get { return longitude_; }
    }
    
    public const int DayFieldNumber = 10;
    private bool hasDay;
    private uint day_;
    public bool HasDay {
      get { return hasDay; }
    }
    [global::System.CLSCompliant(false)]
    public uint Day {
      get { return day_; }
    }
    
    public const int HourFieldNumber = 11;
    private bool hasHour;
    private uint hour_;
    public bool HasHour {
      get { return hasHour; }
    }
    [global::System.CLSCompliant(false)]
    public uint Hour {
      get { return hour_; }
    }
    
    public const int MinuteFieldNumber = 12;
    private bool hasMinute;
    private uint minute_;
    public bool HasMinute {
      get { return hasMinute; }
    }
    [global::System.CLSCompliant(false)]
    public uint Minute {
      get { return minute_; }
    }
    
    public const int AlarmFieldNumber = 13;
    private bool hasAlarm;
    private uint alarm_;
    public bool HasAlarm {
      get { return hasAlarm; }
    }
    [global::System.CLSCompliant(false)]
    public uint Alarm {
      get { return alarm_; }
    }
    
    public const int IoTypeFieldNumber = 14;
    private bool hasIoType;
    private uint ioType_;
    public bool HasIoType {
      get { return hasIoType; }
    }
    [global::System.CLSCompliant(false)]
    public uint IoType {
      get { return ioType_; }
    }
    
    public const int IoNumberFieldNumber = 15;
    private bool hasIoNumber;
    private uint ioNumber_;
    public bool HasIoNumber {
      get { return hasIoNumber; }
    }
    [global::System.CLSCompliant(false)]
    public uint IoNumber {
      get { return ioNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocol) return false;
        if (!hasSerial) return false;
        if (!hasId) return false;
        if (!hasHandlerType) return false;
        if (!hasStatus) return false;
        if (!hasDate) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uCommandPwdGenResponseFieldNames;
      if (hasProtocol) {
        output.WriteUInt32(1, field_names[12], Protocol);
      }
      if (hasSerial) {
        output.WriteUInt32(2, field_names[13], Serial);
      }
      if (hasId) {
        output.WriteString(3, field_names[5], Id);
      }
      if (hasHandlerType) {
        output.WriteUInt32(4, field_names[3], HandlerType);
      }
      if (hasStatus) {
        output.WriteUInt32(5, field_names[14], Status);
      }
      if (hasDate) {
        output.WriteString(6, field_names[1], Date);
      }
      if (hasPassword) {
        output.WriteString(7, field_names[11], Password);
      }
      if (hasLatitude) {
        output.WriteDouble(8, field_names[8], Latitude);
      }
      if (hasLongitude) {
        output.WriteDouble(9, field_names[9], Longitude);
      }
      if (hasDay) {
        output.WriteUInt32(10, field_names[2], Day);
      }
      if (hasHour) {
        output.WriteUInt32(11, field_names[4], Hour);
      }
      if (hasMinute) {
        output.WriteUInt32(12, field_names[10], Minute);
      }
      if (hasAlarm) {
        output.WriteUInt32(13, field_names[0], Alarm);
      }
      if (hasIoType) {
        output.WriteUInt32(14, field_names[7], IoType);
      }
      if (hasIoNumber) {
        output.WriteUInt32(15, field_names[6], IoNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasProtocol) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Protocol);
      }
      if (hasSerial) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Serial);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Id);
      }
      if (hasHandlerType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, HandlerType);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Status);
      }
      if (hasDate) {
        size += pb::CodedOutputStream.ComputeStringSize(6, Date);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Password);
      }
      if (hasLatitude) {
        size += pb::CodedOutputStream.ComputeDoubleSize(8, Latitude);
      }
      if (hasLongitude) {
        size += pb::CodedOutputStream.ComputeDoubleSize(9, Longitude);
      }
      if (hasDay) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, Day);
      }
      if (hasHour) {
        size += pb::CodedOutputStream.ComputeUInt32Size(11, Hour);
      }
      if (hasMinute) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, Minute);
      }
      if (hasAlarm) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, Alarm);
      }
      if (hasIoType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(14, IoType);
      }
      if (hasIoNumber) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, IoNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static u_command_pwd_gen_response ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static u_command_pwd_gen_response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private u_command_pwd_gen_response MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(u_command_pwd_gen_response prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<u_command_pwd_gen_response, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(u_command_pwd_gen_response cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private u_command_pwd_gen_response result;
      
      private u_command_pwd_gen_response PrepareBuilder() {
        if (resultIsReadOnly) {
          u_command_pwd_gen_response original = result;
          result = new u_command_pwd_gen_response();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override u_command_pwd_gen_response MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::maxtrack.pb.commands.u_command_pwd_gen_response.Descriptor; }
      }
      
      public override u_command_pwd_gen_response DefaultInstanceForType {
        get { return global::maxtrack.pb.commands.u_command_pwd_gen_response.DefaultInstance; }
      }
      
      public override u_command_pwd_gen_response BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is u_command_pwd_gen_response) {
          return MergeFrom((u_command_pwd_gen_response) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(u_command_pwd_gen_response other) {
        if (other == global::maxtrack.pb.commands.u_command_pwd_gen_response.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocol) {
          Protocol = other.Protocol;
        }
        if (other.HasSerial) {
          Serial = other.Serial;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasHandlerType) {
          HandlerType = other.HandlerType;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasDate) {
          Date = other.Date;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasLatitude) {
          Latitude = other.Latitude;
        }
        if (other.HasLongitude) {
          Longitude = other.Longitude;
        }
        if (other.HasDay) {
          Day = other.Day;
        }
        if (other.HasHour) {
          Hour = other.Hour;
        }
        if (other.HasMinute) {
          Minute = other.Minute;
        }
        if (other.HasAlarm) {
          Alarm = other.Alarm;
        }
        if (other.HasIoType) {
          IoType = other.IoType;
        }
        if (other.HasIoNumber) {
          IoNumber = other.IoNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uCommandPwdGenResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uCommandPwdGenResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocol = input.ReadUInt32(ref result.protocol_);
              break;
            }
            case 16: {
              result.hasSerial = input.ReadUInt32(ref result.serial_);
              break;
            }
            case 26: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 32: {
              result.hasHandlerType = input.ReadUInt32(ref result.handlerType_);
              break;
            }
            case 40: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 50: {
              result.hasDate = input.ReadString(ref result.date_);
              break;
            }
            case 58: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 65: {
              result.hasLatitude = input.ReadDouble(ref result.latitude_);
              break;
            }
            case 73: {
              result.hasLongitude = input.ReadDouble(ref result.longitude_);
              break;
            }
            case 80: {
              result.hasDay = input.ReadUInt32(ref result.day_);
              break;
            }
            case 88: {
              result.hasHour = input.ReadUInt32(ref result.hour_);
              break;
            }
            case 96: {
              result.hasMinute = input.ReadUInt32(ref result.minute_);
              break;
            }
            case 104: {
              result.hasAlarm = input.ReadUInt32(ref result.alarm_);
              break;
            }
            case 112: {
              result.hasIoType = input.ReadUInt32(ref result.ioType_);
              break;
            }
            case 120: {
              result.hasIoNumber = input.ReadUInt32(ref result.ioNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocol {
        get { return result.hasProtocol; }
      }
      [global::System.CLSCompliant(false)]
      public uint Protocol {
        get { return result.Protocol; }
        set { SetProtocol(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocol(uint value) {
        PrepareBuilder();
        result.hasProtocol = true;
        result.protocol_ = value;
        return this;
      }
      public Builder ClearProtocol() {
        PrepareBuilder();
        result.hasProtocol = false;
        result.protocol_ = 0;
        return this;
      }
      
      public bool HasSerial {
        get { return result.hasSerial; }
      }
      [global::System.CLSCompliant(false)]
      public uint Serial {
        get { return result.Serial; }
        set { SetSerial(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSerial(uint value) {
        PrepareBuilder();
        result.hasSerial = true;
        result.serial_ = value;
        return this;
      }
      public Builder ClearSerial() {
        PrepareBuilder();
        result.hasSerial = false;
        result.serial_ = 0;
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasHandlerType {
        get { return result.hasHandlerType; }
      }
      [global::System.CLSCompliant(false)]
      public uint HandlerType {
        get { return result.HandlerType; }
        set { SetHandlerType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHandlerType(uint value) {
        PrepareBuilder();
        result.hasHandlerType = true;
        result.handlerType_ = value;
        return this;
      }
      public Builder ClearHandlerType() {
        PrepareBuilder();
        result.hasHandlerType = false;
        result.handlerType_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasDate {
        get { return result.hasDate; }
      }
      public string Date {
        get { return result.Date; }
        set { SetDate(value); }
      }
      public Builder SetDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDate = true;
        result.date_ = value;
        return this;
      }
      public Builder ClearDate() {
        PrepareBuilder();
        result.hasDate = false;
        result.date_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasLatitude {
        get { return result.hasLatitude; }
      }
      public double Latitude {
        get { return result.Latitude; }
        set { SetLatitude(value); }
      }
      public Builder SetLatitude(double value) {
        PrepareBuilder();
        result.hasLatitude = true;
        result.latitude_ = value;
        return this;
      }
      public Builder ClearLatitude() {
        PrepareBuilder();
        result.hasLatitude = false;
        result.latitude_ = 0D;
        return this;
      }
      
      public bool HasLongitude {
        get { return result.hasLongitude; }
      }
      public double Longitude {
        get { return result.Longitude; }
        set { SetLongitude(value); }
      }
      public Builder SetLongitude(double value) {
        PrepareBuilder();
        result.hasLongitude = true;
        result.longitude_ = value;
        return this;
      }
      public Builder ClearLongitude() {
        PrepareBuilder();
        result.hasLongitude = false;
        result.longitude_ = 0D;
        return this;
      }
      
      public bool HasDay {
        get { return result.hasDay; }
      }
      [global::System.CLSCompliant(false)]
      public uint Day {
        get { return result.Day; }
        set { SetDay(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDay(uint value) {
        PrepareBuilder();
        result.hasDay = true;
        result.day_ = value;
        return this;
      }
      public Builder ClearDay() {
        PrepareBuilder();
        result.hasDay = false;
        result.day_ = 0;
        return this;
      }
      
      public bool HasHour {
        get { return result.hasHour; }
      }
      [global::System.CLSCompliant(false)]
      public uint Hour {
        get { return result.Hour; }
        set { SetHour(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHour(uint value) {
        PrepareBuilder();
        result.hasHour = true;
        result.hour_ = value;
        return this;
      }
      public Builder ClearHour() {
        PrepareBuilder();
        result.hasHour = false;
        result.hour_ = 0;
        return this;
      }
      
      public bool HasMinute {
        get { return result.hasMinute; }
      }
      [global::System.CLSCompliant(false)]
      public uint Minute {
        get { return result.Minute; }
        set { SetMinute(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMinute(uint value) {
        PrepareBuilder();
        result.hasMinute = true;
        result.minute_ = value;
        return this;
      }
      public Builder ClearMinute() {
        PrepareBuilder();
        result.hasMinute = false;
        result.minute_ = 0;
        return this;
      }
      
      public bool HasAlarm {
        get { return result.hasAlarm; }
      }
      [global::System.CLSCompliant(false)]
      public uint Alarm {
        get { return result.Alarm; }
        set { SetAlarm(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAlarm(uint value) {
        PrepareBuilder();
        result.hasAlarm = true;
        result.alarm_ = value;
        return this;
      }
      public Builder ClearAlarm() {
        PrepareBuilder();
        result.hasAlarm = false;
        result.alarm_ = 0;
        return this;
      }
      
      public bool HasIoType {
        get { return result.hasIoType; }
      }
      [global::System.CLSCompliant(false)]
      public uint IoType {
        get { return result.IoType; }
        set { SetIoType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIoType(uint value) {
        PrepareBuilder();
        result.hasIoType = true;
        result.ioType_ = value;
        return this;
      }
      public Builder ClearIoType() {
        PrepareBuilder();
        result.hasIoType = false;
        result.ioType_ = 0;
        return this;
      }
      
      public bool HasIoNumber {
        get { return result.hasIoNumber; }
      }
      [global::System.CLSCompliant(false)]
      public uint IoNumber {
        get { return result.IoNumber; }
        set { SetIoNumber(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIoNumber(uint value) {
        PrepareBuilder();
        result.hasIoNumber = true;
        result.ioNumber_ = value;
        return this;
      }
      public Builder ClearIoNumber() {
        PrepareBuilder();
        result.hasIoNumber = false;
        result.ioNumber_ = 0;
        return this;
      }
    }
    static u_command_pwd_gen_response() {
      object.ReferenceEquals(global::maxtrack.pb.commands.Commands.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
